openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /register:
    post: 
      summary: Register new user 
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                name:
                  type: string
                password:
                  type: string
              required: 
                - phone
                - name
                - password
      responses:
        '200':
          description: Successfully created new user
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /login:
    post: 
      summary: Login with registered user
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                password:
                  type: string
              required:
                - phone
                - password 
      responses:
        '200':
          description: Login success
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/LoginResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /user/profile:
    get: 
      summary: Get user profile
      operationId: getProfile
      responses:
        '200':
          description: Login success
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/GetProfileResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post: 
      summary: Update user profile
      operationId: updateProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                name:
                  type: string
      responses:
        '200':
          description: Update success
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/UpdateProfileResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    HelloResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    RegisterResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
    LoginResponse:
      type: object
      required:
        - id
        - jwt_token
      properties:
        id:
          type: string
        jwt_token:
          type: string
    GetProfileResponse:
      type: object
      required:
        - name
        - phone
      properties:
        name:
          type: string
        phone:
          type: string
    UpdateProfileResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    
